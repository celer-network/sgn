// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package mainchain

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// GuardABI is the input ABI used to generate the binding from.
const GuardABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"ConfirmWithdrawEventHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Len\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"subscriptionExpiration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FeePerBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PunishEventHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoints\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"celerToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"sidechainAddrMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"securityDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"celerLedger\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_celerLedgerAddress\",\"type\":\"address\"},{\"name\":\"_celerTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"guardianEthAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"guardianSidechainAddr\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"newDeposit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"consumer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"subscriptionExpiration\",\"type\":\"uint256\"}],\"name\":\"Subscription\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_sidechainAddr\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"subscribe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cpNumbers\",\"type\":\"uint256[]\"},{\"name\":\"_checkpoints\",\"type\":\"bytes32[]\"}],\"name\":\"uploadCheckpoints\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cpNumber\",\"type\":\"uint256\"},{\"name\":\"_blockNumber\",\"type\":\"bytes\"},{\"name\":\"_headersProofBytes\",\"type\":\"bytes\"},{\"name\":\"_txIndex\",\"type\":\"bytes\"},{\"name\":\"_receiptsProofBytes\",\"type\":\"bytes\"}],\"name\":\"punish\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cpNumber\",\"type\":\"uint256\"},{\"name\":\"_blockNumber\",\"type\":\"bytes\"},{\"name\":\"_headersProofBytes\",\"type\":\"bytes\"},{\"name\":\"_txIndex\",\"type\":\"bytes\"},{\"name\":\"_receiptsProofBytes\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// GuardBin is the compiled bytecode used for deploying new contracts.
const GuardBin = ``

// DeployGuard deploys a new Ethereum contract, binding an instance of Guard to it.
func DeployGuard(auth *bind.TransactOpts, backend bind.ContractBackend, _celerLedgerAddress common.Address, _celerTokenAddress common.Address) (common.Address, *types.Transaction, *Guard, error) {
	parsed, err := abi.JSON(strings.NewReader(GuardABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(GuardBin), backend, _celerLedgerAddress, _celerTokenAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Guard{GuardCaller: GuardCaller{contract: contract}, GuardTransactor: GuardTransactor{contract: contract}, GuardFilterer: GuardFilterer{contract: contract}}, nil
}

// Guard is an auto generated Go binding around an Ethereum contract.
type Guard struct {
	GuardCaller     // Read-only binding to the contract
	GuardTransactor // Write-only binding to the contract
	GuardFilterer   // Log filterer for contract events
}

// GuardCaller is an auto generated read-only Go binding around an Ethereum contract.
type GuardCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GuardTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GuardTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GuardFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GuardFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GuardSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GuardSession struct {
	Contract     *Guard            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GuardCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GuardCallerSession struct {
	Contract *GuardCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// GuardTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GuardTransactorSession struct {
	Contract     *GuardTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GuardRaw is an auto generated low-level Go binding around an Ethereum contract.
type GuardRaw struct {
	Contract *Guard // Generic contract binding to access the raw methods on
}

// GuardCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GuardCallerRaw struct {
	Contract *GuardCaller // Generic read-only contract binding to access the raw methods on
}

// GuardTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GuardTransactorRaw struct {
	Contract *GuardTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGuard creates a new instance of Guard, bound to a specific deployed contract.
func NewGuard(address common.Address, backend bind.ContractBackend) (*Guard, error) {
	contract, err := bindGuard(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Guard{GuardCaller: GuardCaller{contract: contract}, GuardTransactor: GuardTransactor{contract: contract}, GuardFilterer: GuardFilterer{contract: contract}}, nil
}

// NewGuardCaller creates a new read-only instance of Guard, bound to a specific deployed contract.
func NewGuardCaller(address common.Address, caller bind.ContractCaller) (*GuardCaller, error) {
	contract, err := bindGuard(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GuardCaller{contract: contract}, nil
}

// NewGuardTransactor creates a new write-only instance of Guard, bound to a specific deployed contract.
func NewGuardTransactor(address common.Address, transactor bind.ContractTransactor) (*GuardTransactor, error) {
	contract, err := bindGuard(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GuardTransactor{contract: contract}, nil
}

// NewGuardFilterer creates a new log filterer instance of Guard, bound to a specific deployed contract.
func NewGuardFilterer(address common.Address, filterer bind.ContractFilterer) (*GuardFilterer, error) {
	contract, err := bindGuard(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GuardFilterer{contract: contract}, nil
}

// bindGuard binds a generic wrapper to an already deployed contract.
func bindGuard(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(GuardABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Guard *GuardRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Guard.Contract.GuardCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Guard *GuardRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Guard.Contract.GuardTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Guard *GuardRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Guard.Contract.GuardTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Guard *GuardCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Guard.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Guard *GuardTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Guard.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Guard *GuardTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Guard.Contract.contract.Transact(opts, method, params...)
}

// ConfirmWithdrawEventHash is a free data retrieval call binding the contract method 0x402b98fd.
//
// Solidity: function ConfirmWithdrawEventHash() constant returns(bytes32)
func (_Guard *GuardCaller) ConfirmWithdrawEventHash(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "ConfirmWithdrawEventHash")
	return *ret0, err
}

// ConfirmWithdrawEventHash is a free data retrieval call binding the contract method 0x402b98fd.
//
// Solidity: function ConfirmWithdrawEventHash() constant returns(bytes32)
func (_Guard *GuardSession) ConfirmWithdrawEventHash() ([32]byte, error) {
	return _Guard.Contract.ConfirmWithdrawEventHash(&_Guard.CallOpts)
}

// ConfirmWithdrawEventHash is a free data retrieval call binding the contract method 0x402b98fd.
//
// Solidity: function ConfirmWithdrawEventHash() constant returns(bytes32)
func (_Guard *GuardCallerSession) ConfirmWithdrawEventHash() ([32]byte, error) {
	return _Guard.Contract.ConfirmWithdrawEventHash(&_Guard.CallOpts)
}

// FeePerBlock is a free data retrieval call binding the contract method 0x5db1d031.
//
// Solidity: function FeePerBlock() constant returns(uint256)
func (_Guard *GuardCaller) FeePerBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "FeePerBlock")
	return *ret0, err
}

// FeePerBlock is a free data retrieval call binding the contract method 0x5db1d031.
//
// Solidity: function FeePerBlock() constant returns(uint256)
func (_Guard *GuardSession) FeePerBlock() (*big.Int, error) {
	return _Guard.Contract.FeePerBlock(&_Guard.CallOpts)
}

// FeePerBlock is a free data retrieval call binding the contract method 0x5db1d031.
//
// Solidity: function FeePerBlock() constant returns(uint256)
func (_Guard *GuardCallerSession) FeePerBlock() (*big.Int, error) {
	return _Guard.Contract.FeePerBlock(&_Guard.CallOpts)
}

// Len is a free data retrieval call binding the contract method 0x53776317.
//
// Solidity: function Len() constant returns(uint256)
func (_Guard *GuardCaller) Len(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "Len")
	return *ret0, err
}

// Len is a free data retrieval call binding the contract method 0x53776317.
//
// Solidity: function Len() constant returns(uint256)
func (_Guard *GuardSession) Len() (*big.Int, error) {
	return _Guard.Contract.Len(&_Guard.CallOpts)
}

// Len is a free data retrieval call binding the contract method 0x53776317.
//
// Solidity: function Len() constant returns(uint256)
func (_Guard *GuardCallerSession) Len() (*big.Int, error) {
	return _Guard.Contract.Len(&_Guard.CallOpts)
}

// PunishEventHash is a free data retrieval call binding the contract method 0x9a99be47.
//
// Solidity: function PunishEventHash() constant returns(bytes32)
func (_Guard *GuardCaller) PunishEventHash(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "PunishEventHash")
	return *ret0, err
}

// PunishEventHash is a free data retrieval call binding the contract method 0x9a99be47.
//
// Solidity: function PunishEventHash() constant returns(bytes32)
func (_Guard *GuardSession) PunishEventHash() ([32]byte, error) {
	return _Guard.Contract.PunishEventHash(&_Guard.CallOpts)
}

// PunishEventHash is a free data retrieval call binding the contract method 0x9a99be47.
//
// Solidity: function PunishEventHash() constant returns(bytes32)
func (_Guard *GuardCallerSession) PunishEventHash() ([32]byte, error) {
	return _Guard.Contract.PunishEventHash(&_Guard.CallOpts)
}

// CelerLedger is a free data retrieval call binding the contract method 0xf975fe7b.
//
// Solidity: function celerLedger() constant returns(address)
func (_Guard *GuardCaller) CelerLedger(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "celerLedger")
	return *ret0, err
}

// CelerLedger is a free data retrieval call binding the contract method 0xf975fe7b.
//
// Solidity: function celerLedger() constant returns(address)
func (_Guard *GuardSession) CelerLedger() (common.Address, error) {
	return _Guard.Contract.CelerLedger(&_Guard.CallOpts)
}

// CelerLedger is a free data retrieval call binding the contract method 0xf975fe7b.
//
// Solidity: function celerLedger() constant returns(address)
func (_Guard *GuardCallerSession) CelerLedger() (common.Address, error) {
	return _Guard.Contract.CelerLedger(&_Guard.CallOpts)
}

// CelerToken is a free data retrieval call binding the contract method 0xc6c21e9d.
//
// Solidity: function celerToken() constant returns(address)
func (_Guard *GuardCaller) CelerToken(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "celerToken")
	return *ret0, err
}

// CelerToken is a free data retrieval call binding the contract method 0xc6c21e9d.
//
// Solidity: function celerToken() constant returns(address)
func (_Guard *GuardSession) CelerToken() (common.Address, error) {
	return _Guard.Contract.CelerToken(&_Guard.CallOpts)
}

// CelerToken is a free data retrieval call binding the contract method 0xc6c21e9d.
//
// Solidity: function celerToken() constant returns(address)
func (_Guard *GuardCallerSession) CelerToken() (common.Address, error) {
	return _Guard.Contract.CelerToken(&_Guard.CallOpts)
}

// Checkpoints is a free data retrieval call binding the contract method 0xb8a24252.
//
// Solidity: function checkpoints(uint256 ) constant returns(bytes32)
func (_Guard *GuardCaller) Checkpoints(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "checkpoints", arg0)
	return *ret0, err
}

// Checkpoints is a free data retrieval call binding the contract method 0xb8a24252.
//
// Solidity: function checkpoints(uint256 ) constant returns(bytes32)
func (_Guard *GuardSession) Checkpoints(arg0 *big.Int) ([32]byte, error) {
	return _Guard.Contract.Checkpoints(&_Guard.CallOpts, arg0)
}

// Checkpoints is a free data retrieval call binding the contract method 0xb8a24252.
//
// Solidity: function checkpoints(uint256 ) constant returns(bytes32)
func (_Guard *GuardCallerSession) Checkpoints(arg0 *big.Int) ([32]byte, error) {
	return _Guard.Contract.Checkpoints(&_Guard.CallOpts, arg0)
}

// SecurityDeposit is a free data retrieval call binding the contract method 0xf1f5da84.
//
// Solidity: function securityDeposit(address ) constant returns(uint256)
func (_Guard *GuardCaller) SecurityDeposit(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "securityDeposit", arg0)
	return *ret0, err
}

// SecurityDeposit is a free data retrieval call binding the contract method 0xf1f5da84.
//
// Solidity: function securityDeposit(address ) constant returns(uint256)
func (_Guard *GuardSession) SecurityDeposit(arg0 common.Address) (*big.Int, error) {
	return _Guard.Contract.SecurityDeposit(&_Guard.CallOpts, arg0)
}

// SecurityDeposit is a free data retrieval call binding the contract method 0xf1f5da84.
//
// Solidity: function securityDeposit(address ) constant returns(uint256)
func (_Guard *GuardCallerSession) SecurityDeposit(arg0 common.Address) (*big.Int, error) {
	return _Guard.Contract.SecurityDeposit(&_Guard.CallOpts, arg0)
}

// SidechainAddrMap is a free data retrieval call binding the contract method 0xe27b4110.
//
// Solidity: function sidechainAddrMap(address ) constant returns(bytes)
func (_Guard *GuardCaller) SidechainAddrMap(opts *bind.CallOpts, arg0 common.Address) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "sidechainAddrMap", arg0)
	return *ret0, err
}

// SidechainAddrMap is a free data retrieval call binding the contract method 0xe27b4110.
//
// Solidity: function sidechainAddrMap(address ) constant returns(bytes)
func (_Guard *GuardSession) SidechainAddrMap(arg0 common.Address) ([]byte, error) {
	return _Guard.Contract.SidechainAddrMap(&_Guard.CallOpts, arg0)
}

// SidechainAddrMap is a free data retrieval call binding the contract method 0xe27b4110.
//
// Solidity: function sidechainAddrMap(address ) constant returns(bytes)
func (_Guard *GuardCallerSession) SidechainAddrMap(arg0 common.Address) ([]byte, error) {
	return _Guard.Contract.SidechainAddrMap(&_Guard.CallOpts, arg0)
}

// SubscriptionExpiration is a free data retrieval call binding the contract method 0x55bf3b33.
//
// Solidity: function subscriptionExpiration(address ) constant returns(uint256)
func (_Guard *GuardCaller) SubscriptionExpiration(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Guard.contract.Call(opts, out, "subscriptionExpiration", arg0)
	return *ret0, err
}

// SubscriptionExpiration is a free data retrieval call binding the contract method 0x55bf3b33.
//
// Solidity: function subscriptionExpiration(address ) constant returns(uint256)
func (_Guard *GuardSession) SubscriptionExpiration(arg0 common.Address) (*big.Int, error) {
	return _Guard.Contract.SubscriptionExpiration(&_Guard.CallOpts, arg0)
}

// SubscriptionExpiration is a free data retrieval call binding the contract method 0x55bf3b33.
//
// Solidity: function subscriptionExpiration(address ) constant returns(uint256)
func (_Guard *GuardCallerSession) SubscriptionExpiration(arg0 common.Address) (*big.Int, error) {
	return _Guard.Contract.SubscriptionExpiration(&_Guard.CallOpts, arg0)
}

// Deposit is a paid mutator transaction binding the contract method 0x5d303519.
//
// Solidity: function deposit(uint256 _amount, bytes _sidechainAddr) returns()
func (_Guard *GuardTransactor) Deposit(opts *bind.TransactOpts, _amount *big.Int, _sidechainAddr []byte) (*types.Transaction, error) {
	return _Guard.contract.Transact(opts, "deposit", _amount, _sidechainAddr)
}

// Deposit is a paid mutator transaction binding the contract method 0x5d303519.
//
// Solidity: function deposit(uint256 _amount, bytes _sidechainAddr) returns()
func (_Guard *GuardSession) Deposit(_amount *big.Int, _sidechainAddr []byte) (*types.Transaction, error) {
	return _Guard.Contract.Deposit(&_Guard.TransactOpts, _amount, _sidechainAddr)
}

// Deposit is a paid mutator transaction binding the contract method 0x5d303519.
//
// Solidity: function deposit(uint256 _amount, bytes _sidechainAddr) returns()
func (_Guard *GuardTransactorSession) Deposit(_amount *big.Int, _sidechainAddr []byte) (*types.Transaction, error) {
	return _Guard.Contract.Deposit(&_Guard.TransactOpts, _amount, _sidechainAddr)
}

// Punish is a paid mutator transaction binding the contract method 0xe0e13493.
//
// Solidity: function punish(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardTransactor) Punish(opts *bind.TransactOpts, _cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.contract.Transact(opts, "punish", _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// Punish is a paid mutator transaction binding the contract method 0xe0e13493.
//
// Solidity: function punish(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardSession) Punish(_cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.Contract.Punish(&_Guard.TransactOpts, _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// Punish is a paid mutator transaction binding the contract method 0xe0e13493.
//
// Solidity: function punish(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardTransactorSession) Punish(_cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.Contract.Punish(&_Guard.TransactOpts, _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// Subscribe is a paid mutator transaction binding the contract method 0x0f574ba7.
//
// Solidity: function subscribe(uint256 _amount) returns()
func (_Guard *GuardTransactor) Subscribe(opts *bind.TransactOpts, _amount *big.Int) (*types.Transaction, error) {
	return _Guard.contract.Transact(opts, "subscribe", _amount)
}

// Subscribe is a paid mutator transaction binding the contract method 0x0f574ba7.
//
// Solidity: function subscribe(uint256 _amount) returns()
func (_Guard *GuardSession) Subscribe(_amount *big.Int) (*types.Transaction, error) {
	return _Guard.Contract.Subscribe(&_Guard.TransactOpts, _amount)
}

// Subscribe is a paid mutator transaction binding the contract method 0x0f574ba7.
//
// Solidity: function subscribe(uint256 _amount) returns()
func (_Guard *GuardTransactorSession) Subscribe(_amount *big.Int) (*types.Transaction, error) {
	return _Guard.Contract.Subscribe(&_Guard.TransactOpts, _amount)
}

// UploadCheckpoints is a paid mutator transaction binding the contract method 0xaec21321.
//
// Solidity: function uploadCheckpoints(uint256[] _cpNumbers, bytes32[] _checkpoints) returns()
func (_Guard *GuardTransactor) UploadCheckpoints(opts *bind.TransactOpts, _cpNumbers []*big.Int, _checkpoints [][32]byte) (*types.Transaction, error) {
	return _Guard.contract.Transact(opts, "uploadCheckpoints", _cpNumbers, _checkpoints)
}

// UploadCheckpoints is a paid mutator transaction binding the contract method 0xaec21321.
//
// Solidity: function uploadCheckpoints(uint256[] _cpNumbers, bytes32[] _checkpoints) returns()
func (_Guard *GuardSession) UploadCheckpoints(_cpNumbers []*big.Int, _checkpoints [][32]byte) (*types.Transaction, error) {
	return _Guard.Contract.UploadCheckpoints(&_Guard.TransactOpts, _cpNumbers, _checkpoints)
}

// UploadCheckpoints is a paid mutator transaction binding the contract method 0xaec21321.
//
// Solidity: function uploadCheckpoints(uint256[] _cpNumbers, bytes32[] _checkpoints) returns()
func (_Guard *GuardTransactorSession) UploadCheckpoints(_cpNumbers []*big.Int, _checkpoints [][32]byte) (*types.Transaction, error) {
	return _Guard.Contract.UploadCheckpoints(&_Guard.TransactOpts, _cpNumbers, _checkpoints)
}

// Withdraw is a paid mutator transaction binding the contract method 0x8afbceed.
//
// Solidity: function withdraw(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardTransactor) Withdraw(opts *bind.TransactOpts, _cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.contract.Transact(opts, "withdraw", _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// Withdraw is a paid mutator transaction binding the contract method 0x8afbceed.
//
// Solidity: function withdraw(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardSession) Withdraw(_cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.Contract.Withdraw(&_Guard.TransactOpts, _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// Withdraw is a paid mutator transaction binding the contract method 0x8afbceed.
//
// Solidity: function withdraw(uint256 _cpNumber, bytes _blockNumber, bytes _headersProofBytes, bytes _txIndex, bytes _receiptsProofBytes) returns()
func (_Guard *GuardTransactorSession) Withdraw(_cpNumber *big.Int, _blockNumber []byte, _headersProofBytes []byte, _txIndex []byte, _receiptsProofBytes []byte) (*types.Transaction, error) {
	return _Guard.Contract.Withdraw(&_Guard.TransactOpts, _cpNumber, _blockNumber, _headersProofBytes, _txIndex, _receiptsProofBytes)
}

// GuardDepositIterator is returned from FilterDeposit and is used to iterate over the raw logs and unpacked data for Deposit events raised by the Guard contract.
type GuardDepositIterator struct {
	Event *GuardDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GuardDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GuardDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GuardDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GuardDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GuardDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GuardDeposit represents a Deposit event raised by the Guard contract.
type GuardDeposit struct {
	GuardianEthAddr       common.Address
	GuardianSidechainAddr []byte
	NewDeposit            *big.Int
	TotalDeposit          *big.Int
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterDeposit is a free log retrieval operation binding the contract event 0xc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed9527427.
//
// Solidity: event Deposit(address guardianEthAddr, bytes guardianSidechainAddr, uint256 newDeposit, uint256 totalDeposit)
func (_Guard *GuardFilterer) FilterDeposit(opts *bind.FilterOpts) (*GuardDepositIterator, error) {

	logs, sub, err := _Guard.contract.FilterLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return &GuardDepositIterator{contract: _Guard.contract, event: "Deposit", logs: logs, sub: sub}, nil
}

// WatchDeposit is a free log subscription operation binding the contract event 0xc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed9527427.
//
// Solidity: event Deposit(address guardianEthAddr, bytes guardianSidechainAddr, uint256 newDeposit, uint256 totalDeposit)
func (_Guard *GuardFilterer) WatchDeposit(opts *bind.WatchOpts, sink chan<- *GuardDeposit) (event.Subscription, error) {

	logs, sub, err := _Guard.contract.WatchLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GuardDeposit)
				if err := _Guard.contract.UnpackLog(event, "Deposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// GuardSubscriptionIterator is returned from FilterSubscription and is used to iterate over the raw logs and unpacked data for Subscription events raised by the Guard contract.
type GuardSubscriptionIterator struct {
	Event *GuardSubscription // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GuardSubscriptionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GuardSubscription)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GuardSubscription)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GuardSubscriptionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GuardSubscriptionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GuardSubscription represents a Subscription event raised by the Guard contract.
type GuardSubscription struct {
	Consumer               common.Address
	Amount                 *big.Int
	SubscriptionExpiration *big.Int
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterSubscription is a free log retrieval operation binding the contract event 0x8eb8bcc7421f99b92ab7d727e056544fb59514f8f56251e69658c21ece8977fa.
//
// Solidity: event Subscription(address consumer, uint256 amount, uint256 subscriptionExpiration)
func (_Guard *GuardFilterer) FilterSubscription(opts *bind.FilterOpts) (*GuardSubscriptionIterator, error) {

	logs, sub, err := _Guard.contract.FilterLogs(opts, "Subscription")
	if err != nil {
		return nil, err
	}
	return &GuardSubscriptionIterator{contract: _Guard.contract, event: "Subscription", logs: logs, sub: sub}, nil
}

// WatchSubscription is a free log subscription operation binding the contract event 0x8eb8bcc7421f99b92ab7d727e056544fb59514f8f56251e69658c21ece8977fa.
//
// Solidity: event Subscription(address consumer, uint256 amount, uint256 subscriptionExpiration)
func (_Guard *GuardFilterer) WatchSubscription(opts *bind.WatchOpts, sink chan<- *GuardSubscription) (event.Subscription, error) {

	logs, sub, err := _Guard.contract.WatchLogs(opts, "Subscription")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GuardSubscription)
				if err := _Guard.contract.UnpackLog(event, "Subscription", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
