// Code generated by protoc-gen-go. DO NOT EDIT.
// source: seal.proto

package seal

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactorLog struct {
	MsgNum               uint32            `protobuf:"varint,1,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`
	MsgType              map[string]uint32 `protobuf:"bytes,2,rep,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Sender               string            `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	TxHash               string            `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ExecutionTimeMs      float64           `protobuf:"fixed64,100,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	Error                []string          `protobuf:"bytes,101,rep,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransactorLog) Reset()         { *m = TransactorLog{} }
func (m *TransactorLog) String() string { return proto.CompactTextString(m) }
func (*TransactorLog) ProtoMessage()    {}
func (*TransactorLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a02c8d155741ea4f, []int{0}
}

func (m *TransactorLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactorLog.Unmarshal(m, b)
}
func (m *TransactorLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactorLog.Marshal(b, m, deterministic)
}
func (m *TransactorLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactorLog.Merge(m, src)
}
func (m *TransactorLog) XXX_Size() int {
	return xxx_messageInfo_TransactorLog.Size(m)
}
func (m *TransactorLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactorLog.DiscardUnknown(m)
}

var xxx_messageInfo_TransactorLog proto.InternalMessageInfo

func (m *TransactorLog) GetMsgNum() uint32 {
	if m != nil {
		return m.MsgNum
	}
	return 0
}

func (m *TransactorLog) GetMsgType() map[string]uint32 {
	if m != nil {
		return m.MsgType
	}
	return nil
}

func (m *TransactorLog) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *TransactorLog) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TransactorLog) GetExecutionTimeMs() float64 {
	if m != nil {
		return m.ExecutionTimeMs
	}
	return 0
}

func (m *TransactorLog) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

type MsgLog struct {
	Type                 string       `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	EthAddress           string       `protobuf:"bytes,2,opt,name=eth_address,json=ethAddress,proto3" json:"eth_address,omitempty"`
	PubKey               string       `protobuf:"bytes,3,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Transactor           []string     `protobuf:"bytes,4,rep,name=transactor,proto3" json:"transactor,omitempty"`
	CandidateAddr        string       `protobuf:"bytes,5,opt,name=candidate_addr,json=candidateAddr,proto3" json:"candidate_addr,omitempty"`
	DelegatorAddr        string       `protobuf:"bytes,6,opt,name=delegator_addr,json=delegatorAddr,proto3" json:"delegator_addr,omitempty"`
	ChanInfo             *ChannelInfo `protobuf:"bytes,7,opt,name=chan_info,json=chanInfo,proto3" json:"chan_info,omitempty"`
	Penalty              *Penalty     `protobuf:"bytes,8,opt,name=penalty,proto3" json:"penalty,omitempty"`
	BlockNum             uint64       `protobuf:"varint,9,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Deposit              string       `protobuf:"bytes,10,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Change               *Change      `protobuf:"bytes,11,opt,name=change,proto3" json:"change,omitempty"`
	Sender               string       `protobuf:"bytes,99,opt,name=sender,proto3" json:"sender,omitempty"`
	ExecutionTimeMs      float64      `protobuf:"fixed64,100,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	Error                []string     `protobuf:"bytes,101,rep,name=error,proto3" json:"error,omitempty"`
	Warn                 []string     `protobuf:"bytes,102,rep,name=warn,proto3" json:"warn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MsgLog) Reset()         { *m = MsgLog{} }
func (m *MsgLog) String() string { return proto.CompactTextString(m) }
func (*MsgLog) ProtoMessage()    {}
func (*MsgLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a02c8d155741ea4f, []int{1}
}

func (m *MsgLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgLog.Unmarshal(m, b)
}
func (m *MsgLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgLog.Marshal(b, m, deterministic)
}
func (m *MsgLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLog.Merge(m, src)
}
func (m *MsgLog) XXX_Size() int {
	return xxx_messageInfo_MsgLog.Size(m)
}
func (m *MsgLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLog.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLog proto.InternalMessageInfo

func (m *MsgLog) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MsgLog) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *MsgLog) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *MsgLog) GetTransactor() []string {
	if m != nil {
		return m.Transactor
	}
	return nil
}

func (m *MsgLog) GetCandidateAddr() string {
	if m != nil {
		return m.CandidateAddr
	}
	return ""
}

func (m *MsgLog) GetDelegatorAddr() string {
	if m != nil {
		return m.DelegatorAddr
	}
	return ""
}

func (m *MsgLog) GetChanInfo() *ChannelInfo {
	if m != nil {
		return m.ChanInfo
	}
	return nil
}

func (m *MsgLog) GetPenalty() *Penalty {
	if m != nil {
		return m.Penalty
	}
	return nil
}

func (m *MsgLog) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *MsgLog) GetDeposit() string {
	if m != nil {
		return m.Deposit
	}
	return ""
}

func (m *MsgLog) GetChange() *Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (m *MsgLog) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgLog) GetExecutionTimeMs() float64 {
	if m != nil {
		return m.ExecutionTimeMs
	}
	return 0
}

func (m *MsgLog) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *MsgLog) GetWarn() []string {
	if m != nil {
		return m.Warn
	}
	return nil
}

type ChannelInfo struct {
	ChanId               string   `protobuf:"bytes,1,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	PeerFrom             string   `protobuf:"bytes,2,opt,name=peer_from,json=peerFrom,proto3" json:"peer_from,omitempty"`
	SeqNum               uint64   `protobuf:"varint,3,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	TriggerTxHash        string   `protobuf:"bytes,4,opt,name=trigger_tx_hash,json=triggerTxHash,proto3" json:"trigger_tx_hash,omitempty"`
	GuardTxHash          string   `protobuf:"bytes,5,opt,name=guard_tx_hash,json=guardTxHash,proto3" json:"guard_tx_hash,omitempty"`
	Guards               []string `protobuf:"bytes,6,rep,name=guards,proto3" json:"guards,omitempty"`
	GuardIndex           uint32   `protobuf:"varint,7,opt,name=guard_index,json=guardIndex,proto3" json:"guard_index,omitempty"`
	TriggerBlknum        uint64   `protobuf:"varint,8,opt,name=trigger_blknum,json=triggerBlknum,proto3" json:"trigger_blknum,omitempty"`
	GuardBlknum          uint64   `protobuf:"varint,9,opt,name=guard_blknum,json=guardBlknum,proto3" json:"guard_blknum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelInfo) Reset()         { *m = ChannelInfo{} }
func (m *ChannelInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelInfo) ProtoMessage()    {}
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a02c8d155741ea4f, []int{2}
}

func (m *ChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelInfo.Unmarshal(m, b)
}
func (m *ChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelInfo.Marshal(b, m, deterministic)
}
func (m *ChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelInfo.Merge(m, src)
}
func (m *ChannelInfo) XXX_Size() int {
	return xxx_messageInfo_ChannelInfo.Size(m)
}
func (m *ChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelInfo proto.InternalMessageInfo

func (m *ChannelInfo) GetChanId() string {
	if m != nil {
		return m.ChanId
	}
	return ""
}

func (m *ChannelInfo) GetPeerFrom() string {
	if m != nil {
		return m.PeerFrom
	}
	return ""
}

func (m *ChannelInfo) GetSeqNum() uint64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

func (m *ChannelInfo) GetTriggerTxHash() string {
	if m != nil {
		return m.TriggerTxHash
	}
	return ""
}

func (m *ChannelInfo) GetGuardTxHash() string {
	if m != nil {
		return m.GuardTxHash
	}
	return ""
}

func (m *ChannelInfo) GetGuards() []string {
	if m != nil {
		return m.Guards
	}
	return nil
}

func (m *ChannelInfo) GetGuardIndex() uint32 {
	if m != nil {
		return m.GuardIndex
	}
	return 0
}

func (m *ChannelInfo) GetTriggerBlknum() uint64 {
	if m != nil {
		return m.TriggerBlknum
	}
	return 0
}

func (m *ChannelInfo) GetGuardBlknum() uint64 {
	if m != nil {
		return m.GuardBlknum
	}
	return 0
}

type Penalty struct {
	Nonce                uint64   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Validator            string   `protobuf:"bytes,2,opt,name=validator,proto3" json:"validator,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Penalty) Reset()         { *m = Penalty{} }
func (m *Penalty) String() string { return proto.CompactTextString(m) }
func (*Penalty) ProtoMessage()    {}
func (*Penalty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a02c8d155741ea4f, []int{3}
}

func (m *Penalty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Penalty.Unmarshal(m, b)
}
func (m *Penalty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Penalty.Marshal(b, m, deterministic)
}
func (m *Penalty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Penalty.Merge(m, src)
}
func (m *Penalty) XXX_Size() int {
	return xxx_messageInfo_Penalty.Size(m)
}
func (m *Penalty) XXX_DiscardUnknown() {
	xxx_messageInfo_Penalty.DiscardUnknown(m)
}

var xxx_messageInfo_Penalty proto.InternalMessageInfo

func (m *Penalty) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Penalty) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *Penalty) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type Change struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Change) Reset()         { *m = Change{} }
func (m *Change) String() string { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()    {}
func (*Change) Descriptor() ([]byte, []int) {
	return fileDescriptor_a02c8d155741ea4f, []int{4}
}

func (m *Change) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Change.Unmarshal(m, b)
}
func (m *Change) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Change.Marshal(b, m, deterministic)
}
func (m *Change) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Change.Merge(m, src)
}
func (m *Change) XXX_Size() int {
	return xxx_messageInfo_Change.Size(m)
}
func (m *Change) XXX_DiscardUnknown() {
	xxx_messageInfo_Change.DiscardUnknown(m)
}

var xxx_messageInfo_Change proto.InternalMessageInfo

func (m *Change) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Change) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*TransactorLog)(nil), "seal.TransactorLog")
	proto.RegisterMapType((map[string]uint32)(nil), "seal.TransactorLog.MsgTypeEntry")
	proto.RegisterType((*MsgLog)(nil), "seal.MsgLog")
	proto.RegisterType((*ChannelInfo)(nil), "seal.ChannelInfo")
	proto.RegisterType((*Penalty)(nil), "seal.Penalty")
	proto.RegisterType((*Change)(nil), "seal.Change")
}

func init() { proto.RegisterFile("seal.proto", fileDescriptor_a02c8d155741ea4f) }

var fileDescriptor_a02c8d155741ea4f = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x95, 0x93, 0xd4, 0x89, 0x27, 0x4d, 0xfb, 0x75, 0xf5, 0xa9, 0xac, 0x00, 0x81, 0x89, 0xf8,
	0x89, 0x10, 0xca, 0x45, 0xb9, 0x41, 0xe5, 0x0a, 0x10, 0x88, 0x0a, 0x8a, 0x90, 0x15, 0xae, 0xad,
	0x4d, 0x3c, 0x71, 0xac, 0xda, 0xbb, 0xee, 0xee, 0xba, 0x24, 0xef, 0xc1, 0x5b, 0xf0, 0x62, 0x3c,
	0x06, 0x9a, 0x5d, 0x27, 0x4d, 0xaf, 0xb9, 0xdb, 0x39, 0x7b, 0x66, 0x3c, 0x73, 0xe6, 0xac, 0x01,
	0x0c, 0x8a, 0x72, 0x5a, 0x6b, 0x65, 0x15, 0xeb, 0xd1, 0x79, 0xfc, 0xab, 0x03, 0xa3, 0x99, 0x16,
	0xd2, 0x88, 0x85, 0x55, 0xfa, 0xab, 0xca, 0xd9, 0x3d, 0xe8, 0x57, 0x26, 0x4f, 0x65, 0x53, 0xf1,
	0x20, 0x0e, 0x26, 0xa3, 0x24, 0xac, 0x4c, 0xfe, 0xad, 0xa9, 0xd8, 0x5b, 0x18, 0xd0, 0x85, 0xdd,
	0xd4, 0xc8, 0x3b, 0x71, 0x77, 0x32, 0x3c, 0x8b, 0xa7, 0xae, 0xde, 0x9d, 0xfc, 0xe9, 0xa5, 0xc9,
	0x67, 0x9b, 0x1a, 0x3f, 0x4a, 0xab, 0x37, 0x09, 0x95, 0xa2, 0x88, 0x9d, 0x42, 0x68, 0x50, 0x66,
	0xa8, 0x79, 0x37, 0x0e, 0x26, 0x51, 0xd2, 0x46, 0xf4, 0x35, 0xbb, 0x4e, 0x57, 0xc2, 0xac, 0x78,
	0xcf, 0x5f, 0xd8, 0xf5, 0x67, 0x61, 0x56, 0xec, 0x25, 0x9c, 0xe0, 0x1a, 0x17, 0x8d, 0x2d, 0x94,
	0x4c, 0x6d, 0x51, 0x61, 0x5a, 0x19, 0x9e, 0xc5, 0xc1, 0x24, 0x48, 0x8e, 0x77, 0x17, 0xb3, 0xa2,
	0xc2, 0x4b, 0xc3, 0xfe, 0x87, 0x03, 0xd4, 0x5a, 0x69, 0x8e, 0x71, 0x77, 0x12, 0x25, 0x3e, 0xb8,
	0x7f, 0x0e, 0x87, 0xfb, 0xbd, 0xb0, 0xff, 0xa0, 0x7b, 0x85, 0x1b, 0x37, 0x54, 0x94, 0xd0, 0x91,
	0xf2, 0x6e, 0x44, 0xd9, 0xd0, 0x38, 0x34, 0xa8, 0x0f, 0xce, 0x3b, 0x6f, 0x82, 0xf1, 0x9f, 0x2e,
	0x84, 0x97, 0x26, 0x27, 0x3d, 0x18, 0xf4, 0xdc, 0xc8, 0x3e, 0xcf, 0x9d, 0xd9, 0x63, 0x18, 0xa2,
	0x5d, 0xa5, 0x22, 0xcb, 0x34, 0x1a, 0xe3, 0xd2, 0xa3, 0x04, 0xd0, 0xae, 0xde, 0x79, 0x84, 0xc6,
	0xaa, 0x9b, 0x79, 0x4a, 0xdf, 0x6b, 0xe7, 0xad, 0x9b, 0xf9, 0x17, 0xdc, 0xb0, 0x47, 0x00, 0x76,
	0x27, 0x17, 0xef, 0xb9, 0x7e, 0xf7, 0x10, 0xf6, 0x0c, 0x8e, 0x16, 0x42, 0x66, 0x45, 0x26, 0x2c,
	0xba, 0xfa, 0xfc, 0xc0, 0xe5, 0x8f, 0x76, 0x28, 0x7d, 0x82, 0x68, 0x19, 0x96, 0x98, 0x0b, 0xab,
	0xb4, 0xa7, 0x85, 0x9e, 0xb6, 0x43, 0x1d, 0x6d, 0x0a, 0xd1, 0x62, 0x25, 0x64, 0x5a, 0xc8, 0xa5,
	0xe2, 0xfd, 0x38, 0x98, 0x0c, 0xcf, 0x4e, 0xfc, 0xce, 0x3e, 0xac, 0x84, 0x94, 0x58, 0x5e, 0xc8,
	0xa5, 0x4a, 0x06, 0xc4, 0xa1, 0x13, 0x7b, 0x01, 0xfd, 0x1a, 0xa5, 0x28, 0xed, 0x86, 0x0f, 0x1c,
	0x7b, 0xe4, 0xd9, 0xdf, 0x3d, 0x98, 0x6c, 0x6f, 0xd9, 0x03, 0x88, 0xe6, 0xa5, 0x5a, 0x5c, 0x39,
	0x9b, 0x44, 0x71, 0x30, 0xe9, 0x25, 0x03, 0x07, 0x90, 0x51, 0x38, 0xf4, 0x33, 0xac, 0x95, 0x29,
	0x2c, 0x07, 0xd7, 0xd5, 0x36, 0x64, 0x4f, 0x21, 0xa4, 0x6f, 0xe5, 0xc8, 0x87, 0xae, 0xfc, 0xe1,
	0x6d, 0x33, 0x39, 0x26, 0xed, 0xdd, 0x9e, 0x57, 0x16, 0x77, 0xbc, 0xf2, 0xcf, 0x96, 0xa0, 0x5d,
	0xfe, 0x14, 0x5a, 0xf2, 0xa5, 0x03, 0xdd, 0x79, 0xfc, 0xbb, 0x03, 0xc3, 0x3d, 0x35, 0x68, 0x75,
	0x5e, 0xb3, 0xac, 0x5d, 0xb9, 0x6b, 0xeb, 0x22, 0xa3, 0x99, 0x6b, 0x44, 0x9d, 0x2e, 0xb5, 0xaa,
	0xda, 0x95, 0x0f, 0x08, 0xf8, 0xa4, 0x55, 0x45, 0x59, 0x06, 0xaf, 0x9d, 0x1c, 0x5d, 0x27, 0x47,
	0x68, 0xf0, 0x9a, 0xc4, 0x78, 0x0e, 0xc7, 0x56, 0x17, 0x79, 0x8e, 0x3a, 0xbd, 0x6b, 0xf4, 0x51,
	0x0b, 0xcf, 0xbc, 0xdf, 0xc7, 0x30, 0xca, 0x1b, 0xa1, 0xb3, 0x1d, 0xcb, 0xef, 0x7d, 0xe8, 0xc0,
	0x96, 0x73, 0x0a, 0xa1, 0x0b, 0x0d, 0x0f, 0xdd, 0x00, 0x6d, 0x44, 0x76, 0xf4, 0xb9, 0x85, 0xcc,
	0x70, 0xed, 0x16, 0x3d, 0x4a, 0xc0, 0x41, 0x17, 0x84, 0x90, 0x5d, 0xb6, 0x4d, 0xcc, 0xcb, 0x2b,
	0x6a, 0x72, 0xe0, 0x9a, 0xdc, 0xf6, 0xf0, 0xde, 0x81, 0xec, 0x09, 0x1c, 0xfa, 0x3a, 0x2d, 0xc9,
	0x2f, 0xd6, 0xd7, 0xf6, 0x94, 0xf1, 0x0f, 0xe8, 0xb7, 0x66, 0x20, 0x89, 0xa5, 0x92, 0x0b, 0xff,
	0x32, 0x7a, 0x89, 0x0f, 0xd8, 0x43, 0x88, 0x6e, 0x44, 0x49, 0x4e, 0x55, 0xba, 0x55, 0xe9, 0x16,
	0xa0, 0x09, 0x34, 0x0a, 0xa3, 0xe4, 0xf6, 0x59, 0xf8, 0x68, 0xfc, 0x0a, 0x42, 0x6f, 0x02, 0x76,
	0x04, 0x9d, 0x56, 0xf9, 0x5e, 0xd2, 0x29, 0xb2, 0xdd, 0xf3, 0xeb, 0xdc, 0x3e, 0xbf, 0x79, 0xe8,
	0xfe, 0x60, 0xaf, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x11, 0xa8, 0x2d, 0xcf, 0x04, 0x00,
	0x00,
}
