// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sgn.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Next Tag: 3
type PenaltyRequest struct {
	// serialized Penalty message
	Penalty              []byte   `protobuf:"bytes,1,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PenaltyRequest) Reset()         { *m = PenaltyRequest{} }
func (m *PenaltyRequest) String() string { return proto.CompactTextString(m) }
func (*PenaltyRequest) ProtoMessage()    {}
func (*PenaltyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce30e4acb09a2956, []int{0}
}

func (m *PenaltyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PenaltyRequest.Unmarshal(m, b)
}
func (m *PenaltyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PenaltyRequest.Marshal(b, m, deterministic)
}
func (m *PenaltyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PenaltyRequest.Merge(m, src)
}
func (m *PenaltyRequest) XXX_Size() int {
	return xxx_messageInfo_PenaltyRequest.Size(m)
}
func (m *PenaltyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PenaltyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PenaltyRequest proto.InternalMessageInfo

func (m *PenaltyRequest) GetPenalty() []byte {
	if m != nil {
		return m.Penalty
	}
	return nil
}

func (m *PenaltyRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 3
type RewardRequest struct {
	// serialized Reward message
	Reward               []byte   `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardRequest) Reset()         { *m = RewardRequest{} }
func (m *RewardRequest) String() string { return proto.CompactTextString(m) }
func (*RewardRequest) ProtoMessage()    {}
func (*RewardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce30e4acb09a2956, []int{1}
}

func (m *RewardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardRequest.Unmarshal(m, b)
}
func (m *RewardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardRequest.Marshal(b, m, deterministic)
}
func (m *RewardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardRequest.Merge(m, src)
}
func (m *RewardRequest) XXX_Size() int {
	return xxx_messageInfo_RewardRequest.Size(m)
}
func (m *RewardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RewardRequest proto.InternalMessageInfo

func (m *RewardRequest) GetReward() []byte {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *RewardRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 6
type Penalty struct {
	Nonce                uint64            `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ExpireTime           uint64            `protobuf:"varint,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	ValidatorAddress     []byte            `protobuf:"bytes,3,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	PenalizedDelegators  []*AccountAmtPair `protobuf:"bytes,4,rep,name=penalized_delegators,json=penalizedDelegators,proto3" json:"penalized_delegators,omitempty"`
	Beneficiaries        []*AccountAmtPair `protobuf:"bytes,5,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Penalty) Reset()         { *m = Penalty{} }
func (m *Penalty) String() string { return proto.CompactTextString(m) }
func (*Penalty) ProtoMessage()    {}
func (*Penalty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce30e4acb09a2956, []int{2}
}

func (m *Penalty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Penalty.Unmarshal(m, b)
}
func (m *Penalty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Penalty.Marshal(b, m, deterministic)
}
func (m *Penalty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Penalty.Merge(m, src)
}
func (m *Penalty) XXX_Size() int {
	return xxx_messageInfo_Penalty.Size(m)
}
func (m *Penalty) XXX_DiscardUnknown() {
	xxx_messageInfo_Penalty.DiscardUnknown(m)
}

var xxx_messageInfo_Penalty proto.InternalMessageInfo

func (m *Penalty) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Penalty) GetExpireTime() uint64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *Penalty) GetValidatorAddress() []byte {
	if m != nil {
		return m.ValidatorAddress
	}
	return nil
}

func (m *Penalty) GetPenalizedDelegators() []*AccountAmtPair {
	if m != nil {
		return m.PenalizedDelegators
	}
	return nil
}

func (m *Penalty) GetBeneficiaries() []*AccountAmtPair {
	if m != nil {
		return m.Beneficiaries
	}
	return nil
}

// Next Tag: 3
type AccountAmtPair struct {
	Account              []byte   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amt                  []byte   `protobuf:"bytes,2,opt,name=amt,proto3" json:"amt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountAmtPair) Reset()         { *m = AccountAmtPair{} }
func (m *AccountAmtPair) String() string { return proto.CompactTextString(m) }
func (*AccountAmtPair) ProtoMessage()    {}
func (*AccountAmtPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce30e4acb09a2956, []int{3}
}

func (m *AccountAmtPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountAmtPair.Unmarshal(m, b)
}
func (m *AccountAmtPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountAmtPair.Marshal(b, m, deterministic)
}
func (m *AccountAmtPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAmtPair.Merge(m, src)
}
func (m *AccountAmtPair) XXX_Size() int {
	return xxx_messageInfo_AccountAmtPair.Size(m)
}
func (m *AccountAmtPair) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAmtPair.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAmtPair proto.InternalMessageInfo

func (m *AccountAmtPair) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountAmtPair) GetAmt() []byte {
	if m != nil {
		return m.Amt
	}
	return nil
}

// Next Tag: 4
type Reward struct {
	Receiver                []byte   `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	CumulativeMiningReward  []byte   `protobuf:"bytes,2,opt,name=cumulative_mining_reward,json=cumulativeMiningReward,proto3" json:"cumulative_mining_reward,omitempty"`
	CumulativeServiceReward []byte   `protobuf:"bytes,3,opt,name=cumulative_service_reward,json=cumulativeServiceReward,proto3" json:"cumulative_service_reward,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce30e4acb09a2956, []int{4}
}

func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (m *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(m, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetReceiver() []byte {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Reward) GetCumulativeMiningReward() []byte {
	if m != nil {
		return m.CumulativeMiningReward
	}
	return nil
}

func (m *Reward) GetCumulativeServiceReward() []byte {
	if m != nil {
		return m.CumulativeServiceReward
	}
	return nil
}

var E_Soltype = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         1004,
	Name:          "sgn.soltype",
	Tag:           "bytes,1004,opt,name=soltype",
	Filename:      "sgn.proto",
}

func init() {
	proto.RegisterType((*PenaltyRequest)(nil), "sgn.PenaltyRequest")
	proto.RegisterType((*RewardRequest)(nil), "sgn.RewardRequest")
	proto.RegisterType((*Penalty)(nil), "sgn.Penalty")
	proto.RegisterType((*AccountAmtPair)(nil), "sgn.AccountAmtPair")
	proto.RegisterType((*Reward)(nil), "sgn.Reward")
	proto.RegisterExtension(E_Soltype)
}

func init() { proto.RegisterFile("sgn.proto", fileDescriptor_ce30e4acb09a2956) }

var fileDescriptor_ce30e4acb09a2956 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0x3a, 0x8d, 0xe9, 0xf4, 0x8f, 0x60, 0x5b, 0x15, 0x83, 0x40, 0x58, 0x56, 0x85,
	0x72, 0xc1, 0x91, 0x8a, 0xf8, 0x2f, 0x55, 0x4a, 0x55, 0xe5, 0x86, 0xa8, 0x4c, 0x4f, 0x5c, 0xac,
	0xcd, 0x7a, 0x6a, 0x46, 0xd8, 0xbb, 0x66, 0x77, 0x9d, 0x52, 0x1e, 0x8e, 0x87, 0xe1, 0xcc, 0x23,
	0x70, 0x40, 0xf1, 0xda, 0x29, 0x51, 0xd3, 0x53, 0x32, 0xdf, 0xfc, 0xbe, 0x6f, 0xb4, 0xb3, 0x6b,
	0xd8, 0x32, 0x85, 0x4c, 0x6a, 0xad, 0xac, 0x62, 0xbe, 0x29, 0xe4, 0xe3, 0xa8, 0x50, 0xaa, 0x28,
	0x71, 0xdc, 0x4a, 0xb3, 0xe6, 0x72, 0x9c, 0xa3, 0x11, 0x9a, 0x6a, 0xab, 0xb4, 0xc3, 0xe2, 0x13,
	0xd8, 0x3b, 0x47, 0xc9, 0x4b, 0x7b, 0x9d, 0xe2, 0xf7, 0x06, 0x8d, 0x65, 0x21, 0x04, 0xb5, 0x53,
	0x42, 0x2f, 0xf2, 0x46, 0x3b, 0x69, 0x5f, 0x32, 0x06, 0x03, 0x43, 0x85, 0x09, 0x37, 0x22, 0x7f,
	0xb4, 0x93, 0xb6, 0xff, 0xe3, 0x0f, 0xb0, 0x9b, 0xe2, 0x15, 0xd7, 0x79, 0x6f, 0x3f, 0x84, 0xa1,
	0x6e, 0x85, 0xce, 0xdd, 0x55, 0x6b, 0xcd, 0x7f, 0x3d, 0x08, 0xba, 0xe9, 0xec, 0x00, 0x36, 0xa5,
	0x92, 0x02, 0x5b, 0xdb, 0x20, 0x75, 0x05, 0x7b, 0x06, 0xdb, 0xf8, 0xa3, 0x26, 0x8d, 0x99, 0xa5,
	0x0a, 0xc3, 0x8d, 0xb6, 0x07, 0x4e, 0xba, 0xa0, 0x0a, 0xd9, 0x1b, 0x78, 0x30, 0xe7, 0x25, 0xe5,
	0xdc, 0x2a, 0x9d, 0xf1, 0x3c, 0xd7, 0x68, 0x4c, 0xe8, 0x2f, 0x26, 0x9f, 0xc2, 0xef, 0x93, 0xa0,
	0x53, 0xd2, 0xfb, 0x4b, 0x68, 0xe2, 0x14, 0x36, 0x85, 0x83, 0xf6, 0x5c, 0xf4, 0x13, 0xf3, 0x2c,
	0xc7, 0x12, 0x8b, 0x45, 0xd7, 0x84, 0x83, 0xc8, 0x1f, 0x6d, 0x1f, 0xef, 0x27, 0x8b, 0x4d, 0x4e,
	0x84, 0x50, 0x8d, 0xb4, 0x93, 0xca, 0x9e, 0x73, 0xd2, 0xe9, 0xfe, 0xd2, 0x70, 0xb6, 0xe4, 0xd9,
	0x3b, 0xd8, 0x9d, 0xa1, 0xc4, 0x4b, 0x12, 0xc4, 0x35, 0xa1, 0x09, 0x37, 0xef, 0x0e, 0x58, 0x25,
	0xe3, 0x0b, 0xd8, 0x5b, 0x05, 0xd8, 0x11, 0x04, 0xdc, 0x29, 0x6e, 0x7b, 0x2b, 0x67, 0xe8, 0x5b,
	0xec, 0x09, 0xf8, 0xbc, 0xb2, 0xed, 0x32, 0x1c, 0xd1, 0x90, 0xb4, 0xc7, 0xaf, 0x5e, 0xa7, 0x0b,
	0x39, 0xfe, 0xe5, 0xc1, 0xd0, 0x5d, 0x09, 0x7b, 0x0e, 0xf7, 0x34, 0x0a, 0xa4, 0x39, 0xea, 0x35,
	0x79, 0xcb, 0x1e, 0x3b, 0x83, 0x50, 0x34, 0x55, 0x53, 0x72, 0x4b, 0x73, 0xcc, 0x2a, 0x92, 0x24,
	0x8b, 0xac, 0xbb, 0xc5, 0xdb, 0x53, 0x0e, 0x6f, 0xd8, 0x8f, 0x2d, 0xda, 0x4d, 0x9b, 0xc2, 0xa3,
	0xff, 0x52, 0x0c, 0xea, 0x39, 0x09, 0xec, 0x63, 0xfc, 0x5b, 0x31, 0x0f, 0x6f, 0xe0, 0xcf, 0x8e,
	0x75, 0x39, 0xef, 0xdf, 0x42, 0x60, 0x54, 0x69, 0xaf, 0x6b, 0x64, 0x4f, 0x13, 0xf7, 0x80, 0x93,
	0xfe, 0x01, 0x27, 0x53, 0xc2, 0x32, 0xff, 0x54, 0x5b, 0x52, 0xd2, 0x84, 0x7f, 0x82, 0xc8, 0x1b,
	0x6d, 0xa5, 0x3d, 0x7e, 0x7a, 0xf4, 0x25, 0x2e, 0xc8, 0x7e, 0x6d, 0x66, 0x89, 0x50, 0xd5, 0x58,
	0x60, 0x89, 0xfa, 0x85, 0x44, 0x7b, 0xa5, 0xf4, 0xb7, 0xb1, 0x29, 0x64, 0xf7, 0x19, 0x0c, 0xdb,
	0x9f, 0x97, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x50, 0x50, 0x44, 0x7c, 0x2d, 0x03, 0x00, 0x00,
}
