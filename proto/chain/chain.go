// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chain.proto

package chain

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Next Tag: 3
type OpenChannelRequest struct {
	// serialized entity.PaymentChannelInitializer message
	ChannelInitializer []byte `protobuf:"bytes,1,opt,name=channel_initializer,json=channelInitializer,proto3" json:"channel_initializer,omitempty"`
	// require an ascending order based on addresses associated with these sigs
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{0}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetChannelInitializer() []byte {
	if m != nil {
		return m.ChannelInitializer
	}
	return nil
}

func (m *OpenChannelRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 3
type CooperativeWithdrawRequest struct {
	// serialized entity.CooperativeWithdrawInfo message
	WithdrawInfo []byte `protobuf:"bytes,1,opt,name=withdraw_info,json=withdrawInfo,proto3" json:"withdraw_info,omitempty"`
	// require an ascending order based on addresses associated with these sigs
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CooperativeWithdrawRequest) Reset()         { *m = CooperativeWithdrawRequest{} }
func (m *CooperativeWithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*CooperativeWithdrawRequest) ProtoMessage()    {}
func (*CooperativeWithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{1}
}

func (m *CooperativeWithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CooperativeWithdrawRequest.Unmarshal(m, b)
}
func (m *CooperativeWithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CooperativeWithdrawRequest.Marshal(b, m, deterministic)
}
func (m *CooperativeWithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CooperativeWithdrawRequest.Merge(m, src)
}
func (m *CooperativeWithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_CooperativeWithdrawRequest.Size(m)
}
func (m *CooperativeWithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CooperativeWithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CooperativeWithdrawRequest proto.InternalMessageInfo

func (m *CooperativeWithdrawRequest) GetWithdrawInfo() []byte {
	if m != nil {
		return m.WithdrawInfo
	}
	return nil
}

func (m *CooperativeWithdrawRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 3
type CooperativeSettleRequest struct {
	// serialized entity.CooperativeSettleInfo message
	SettleInfo []byte `protobuf:"bytes,1,opt,name=settle_info,json=settleInfo,proto3" json:"settle_info,omitempty"`
	// require an ascending order based on addresses associated with these sigs
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CooperativeSettleRequest) Reset()         { *m = CooperativeSettleRequest{} }
func (m *CooperativeSettleRequest) String() string { return proto.CompactTextString(m) }
func (*CooperativeSettleRequest) ProtoMessage()    {}
func (*CooperativeSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{2}
}

func (m *CooperativeSettleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CooperativeSettleRequest.Unmarshal(m, b)
}
func (m *CooperativeSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CooperativeSettleRequest.Marshal(b, m, deterministic)
}
func (m *CooperativeSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CooperativeSettleRequest.Merge(m, src)
}
func (m *CooperativeSettleRequest) XXX_Size() int {
	return xxx_messageInfo_CooperativeSettleRequest.Size(m)
}
func (m *CooperativeSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CooperativeSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CooperativeSettleRequest proto.InternalMessageInfo

func (m *CooperativeSettleRequest) GetSettleInfo() []byte {
	if m != nil {
		return m.SettleInfo
	}
	return nil
}

func (m *CooperativeSettleRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 3
type ResolvePayByConditionsRequest struct {
	// serialized entity.ConditionalPay message
	CondPay []byte `protobuf:"bytes,1,opt,name=cond_pay,json=condPay,proto3" json:"cond_pay,omitempty"`
	// preimages of the cond_pay hash locks in the same order
	HashPreimages        [][]byte `protobuf:"bytes,2,rep,name=hash_preimages,json=hashPreimages,proto3" json:"hash_preimages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolvePayByConditionsRequest) Reset()         { *m = ResolvePayByConditionsRequest{} }
func (m *ResolvePayByConditionsRequest) String() string { return proto.CompactTextString(m) }
func (*ResolvePayByConditionsRequest) ProtoMessage()    {}
func (*ResolvePayByConditionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{3}
}

func (m *ResolvePayByConditionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolvePayByConditionsRequest.Unmarshal(m, b)
}
func (m *ResolvePayByConditionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolvePayByConditionsRequest.Marshal(b, m, deterministic)
}
func (m *ResolvePayByConditionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolvePayByConditionsRequest.Merge(m, src)
}
func (m *ResolvePayByConditionsRequest) XXX_Size() int {
	return xxx_messageInfo_ResolvePayByConditionsRequest.Size(m)
}
func (m *ResolvePayByConditionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolvePayByConditionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolvePayByConditionsRequest proto.InternalMessageInfo

func (m *ResolvePayByConditionsRequest) GetCondPay() []byte {
	if m != nil {
		return m.CondPay
	}
	return nil
}

func (m *ResolvePayByConditionsRequest) GetHashPreimages() [][]byte {
	if m != nil {
		return m.HashPreimages
	}
	return nil
}

// Next Tag: 3
type SignedSimplexState struct {
	// serialized entity.SimplexPaymentChannel message
	SimplexState []byte `protobuf:"bytes,1,opt,name=simplex_state,json=simplexState,proto3" json:"simplex_state,omitempty"`
	// require an ascending order based on addresses associated with these sigs
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedSimplexState) Reset()         { *m = SignedSimplexState{} }
func (m *SignedSimplexState) String() string { return proto.CompactTextString(m) }
func (*SignedSimplexState) ProtoMessage()    {}
func (*SignedSimplexState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{4}
}

func (m *SignedSimplexState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedSimplexState.Unmarshal(m, b)
}
func (m *SignedSimplexState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedSimplexState.Marshal(b, m, deterministic)
}
func (m *SignedSimplexState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedSimplexState.Merge(m, src)
}
func (m *SignedSimplexState) XXX_Size() int {
	return xxx_messageInfo_SignedSimplexState.Size(m)
}
func (m *SignedSimplexState) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedSimplexState.DiscardUnknown(m)
}

var xxx_messageInfo_SignedSimplexState proto.InternalMessageInfo

func (m *SignedSimplexState) GetSimplexState() []byte {
	if m != nil {
		return m.SimplexState
	}
	return nil
}

func (m *SignedSimplexState) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

// Next Tag: 2
// Using this message to intendSettle is flexible:
//   * you can put multiple signed simplex states in one array as long as not exceeding gas limit
//   * you can put signed simplex states of multiple channels in one array
//       to intendSettle these channels in one function call
// How to use:
//   * channelIds of these simplex states must be ascending
//   * non-null simplex states should be cosigned by both peers of the channel
//   * null simplex states should set seqNum as 0 and be signed by
//       exactly one of the peers of the channel
// Note: if you are submitting one simplex state of the duplex channel,
//   you are intending to settle the whole duplex channel.
type SignedSimplexStateArray struct {
	SignedSimplexStates  []*SignedSimplexState `protobuf:"bytes,1,rep,name=signed_simplex_states,json=signedSimplexStates,proto3" json:"signed_simplex_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SignedSimplexStateArray) Reset()         { *m = SignedSimplexStateArray{} }
func (m *SignedSimplexStateArray) String() string { return proto.CompactTextString(m) }
func (*SignedSimplexStateArray) ProtoMessage()    {}
func (*SignedSimplexStateArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{5}
}

func (m *SignedSimplexStateArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedSimplexStateArray.Unmarshal(m, b)
}
func (m *SignedSimplexStateArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedSimplexStateArray.Marshal(b, m, deterministic)
}
func (m *SignedSimplexStateArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedSimplexStateArray.Merge(m, src)
}
func (m *SignedSimplexStateArray) XXX_Size() int {
	return xxx_messageInfo_SignedSimplexStateArray.Size(m)
}
func (m *SignedSimplexStateArray) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedSimplexStateArray.DiscardUnknown(m)
}

var xxx_messageInfo_SignedSimplexStateArray proto.InternalMessageInfo

func (m *SignedSimplexStateArray) GetSignedSimplexStates() []*SignedSimplexState {
	if m != nil {
		return m.SignedSimplexStates
	}
	return nil
}

// Next Tag: 3
type ChannelMigrationRequest struct {
	// serialized entity.ChannelMigrationInfo message
	ChannelMigrationInfo []byte `protobuf:"bytes,1,opt,name=channel_migration_info,json=channelMigrationInfo,proto3" json:"channel_migration_info,omitempty"`
	// require an ascending order based on addresses associated with these sigs
	Sigs                 [][]byte `protobuf:"bytes,2,rep,name=sigs,proto3" json:"sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelMigrationRequest) Reset()         { *m = ChannelMigrationRequest{} }
func (m *ChannelMigrationRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelMigrationRequest) ProtoMessage()    {}
func (*ChannelMigrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4d91b2d037e7a44, []int{6}
}

func (m *ChannelMigrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelMigrationRequest.Unmarshal(m, b)
}
func (m *ChannelMigrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelMigrationRequest.Marshal(b, m, deterministic)
}
func (m *ChannelMigrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelMigrationRequest.Merge(m, src)
}
func (m *ChannelMigrationRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelMigrationRequest.Size(m)
}
func (m *ChannelMigrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelMigrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelMigrationRequest proto.InternalMessageInfo

func (m *ChannelMigrationRequest) GetChannelMigrationInfo() []byte {
	if m != nil {
		return m.ChannelMigrationInfo
	}
	return nil
}

func (m *ChannelMigrationRequest) GetSigs() [][]byte {
	if m != nil {
		return m.Sigs
	}
	return nil
}

func init() {
	proto.RegisterType((*OpenChannelRequest)(nil), "chain.OpenChannelRequest")
	proto.RegisterType((*CooperativeWithdrawRequest)(nil), "chain.CooperativeWithdrawRequest")
	proto.RegisterType((*CooperativeSettleRequest)(nil), "chain.CooperativeSettleRequest")
	proto.RegisterType((*ResolvePayByConditionsRequest)(nil), "chain.ResolvePayByConditionsRequest")
	proto.RegisterType((*SignedSimplexState)(nil), "chain.SignedSimplexState")
	proto.RegisterType((*SignedSimplexStateArray)(nil), "chain.SignedSimplexStateArray")
	proto.RegisterType((*ChannelMigrationRequest)(nil), "chain.ChannelMigrationRequest")
}

func init() { proto.RegisterFile("chain.proto", fileDescriptor_d4d91b2d037e7a44) }

var fileDescriptor_d4d91b2d037e7a44 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0xaf, 0x93, 0x40,
	0x14, 0x86, 0x53, 0xaf, 0x5f, 0x39, 0xed, 0x75, 0x31, 0x57, 0x2d, 0x35, 0x31, 0x36, 0x18, 0x0d,
	0x1b, 0x4b, 0xa2, 0xfe, 0x01, 0xcb, 0xaa, 0x8b, 0xa6, 0x0d, 0xc4, 0x18, 0xdd, 0x90, 0x29, 0x9c,
	0xc2, 0x89, 0x30, 0x83, 0x33, 0xd3, 0x56, 0xfc, 0xf5, 0x86, 0x8f, 0x89, 0x78, 0xdb, 0xee, 0x38,
	0xcf, 0x61, 0x1e, 0x26, 0x2f, 0x2f, 0x8c, 0x93, 0x9c, 0x93, 0x58, 0x54, 0x4a, 0x1a, 0xc9, 0x1e,
	0xb5, 0x83, 0xfb, 0x1d, 0xd8, 0xa6, 0x42, 0x11, 0xe4, 0x5c, 0x08, 0x2c, 0x42, 0xfc, 0x75, 0x40,
	0x6d, 0x98, 0x0f, 0x77, 0x49, 0x47, 0x62, 0x12, 0x64, 0x88, 0x17, 0xf4, 0x07, 0x95, 0x33, 0x9a,
	0x8f, 0xbc, 0x49, 0xc8, 0xfa, 0xd5, 0xea, 0xdf, 0x86, 0x31, 0x78, 0xa8, 0x29, 0xd3, 0xce, 0x83,
	0xf9, 0x8d, 0x37, 0x09, 0xdb, 0x67, 0xf7, 0x2b, 0xbc, 0x0a, 0xa4, 0xac, 0x50, 0x71, 0x43, 0x47,
	0xfc, 0x46, 0x26, 0x4f, 0x15, 0x3f, 0xd9, 0x4f, 0xbc, 0x85, 0xdb, 0x53, 0x8f, 0x62, 0x12, 0x7b,
	0xd9, 0xcb, 0x27, 0x16, 0xae, 0xc4, 0x5e, 0x5e, 0xd4, 0x6e, 0xc0, 0x19, 0x68, 0x23, 0x34, 0xa6,
	0x40, 0x2b, 0x7d, 0x03, 0x63, 0xdd, 0x82, 0xa1, 0x12, 0x3a, 0x74, 0x55, 0xc8, 0xe1, 0x75, 0x88,
	0x5a, 0x16, 0x47, 0xdc, 0xf2, 0x7a, 0x59, 0x07, 0x52, 0xa4, 0x64, 0x48, 0x0a, 0x6d, 0xad, 0x33,
	0x78, 0x9a, 0x48, 0x91, 0xc6, 0x15, 0xaf, 0x7b, 0xe5, 0x93, 0x66, 0xde, 0xf2, 0x9a, 0xbd, 0x83,
	0x67, 0x39, 0xd7, 0x79, 0x5c, 0x29, 0xa4, 0x92, 0x67, 0x68, 0xcd, 0xb7, 0x0d, 0xdd, 0x5a, 0xe8,
	0xae, 0x81, 0x45, 0x94, 0x09, 0x4c, 0x23, 0x2a, 0xab, 0x02, 0x7f, 0x47, 0x86, 0x1b, 0x6c, 0x22,
	0xd0, 0xdd, 0x1c, 0xeb, 0x06, 0xd8, 0x08, 0xf4, 0xf0, 0xa5, 0x4b, 0x37, 0xce, 0x61, 0x7a, 0xae,
	0xfb, 0xa2, 0x14, 0xaf, 0xd9, 0x1a, 0x5e, 0xe8, 0x76, 0x15, 0xff, 0xa7, 0xd6, 0xce, 0x68, 0x7e,
	0xe3, 0x8d, 0x3f, 0xce, 0x16, 0x5d, 0x07, 0xce, 0x8f, 0x87, 0x77, 0xfa, 0x8c, 0x69, 0x37, 0x81,
	0x69, 0x5f, 0x8d, 0x35, 0x65, 0x4d, 0xe2, 0x52, 0xd8, 0x54, 0x3e, 0xc3, 0x4b, 0xdb, 0x91, 0xd2,
	0xee, 0x86, 0xb1, 0x3f, 0x4f, 0xee, 0x1d, 0xbc, 0xf6, 0x03, 0x96, 0xde, 0x8f, 0xf7, 0x19, 0x99,
	0xfc, 0xb0, 0x5b, 0x24, 0xb2, 0xf4, 0x13, 0x2c, 0x50, 0x7d, 0x10, 0x68, 0x4e, 0x52, 0xfd, 0xf4,
	0x33, 0x19, 0x34, 0xb3, 0xdf, 0x5e, 0x7b, 0xf7, 0xb8, 0xed, 0xee, 0xa7, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x23, 0x82, 0xe2, 0xad, 0xca, 0x02, 0x00, 0x00,
}
