// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package channel

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// LedgerChannelABI is the input ABI used to generate the binding from.
const LedgerChannelABI = "[]"

// LedgerChannelBin is the compiled bytecode used for deploying new contracts.
var LedgerChannelBin = ""

// DeployLedgerChannel deploys a new Ethereum contract, binding an instance of LedgerChannel to it.
func DeployLedgerChannel(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *LedgerChannel, error) {
	parsed, err := abi.JSON(strings.NewReader(LedgerChannelABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(LedgerChannelBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &LedgerChannel{LedgerChannelCaller: LedgerChannelCaller{contract: contract}, LedgerChannelTransactor: LedgerChannelTransactor{contract: contract}, LedgerChannelFilterer: LedgerChannelFilterer{contract: contract}}, nil
}

// LedgerChannel is an auto generated Go binding around an Ethereum contract.
type LedgerChannel struct {
	LedgerChannelCaller     // Read-only binding to the contract
	LedgerChannelTransactor // Write-only binding to the contract
	LedgerChannelFilterer   // Log filterer for contract events
}

// LedgerChannelCaller is an auto generated read-only Go binding around an Ethereum contract.
type LedgerChannelCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LedgerChannelTransactor is an auto generated write-only Go binding around an Ethereum contract.
type LedgerChannelTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LedgerChannelFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type LedgerChannelFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// LedgerChannelSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type LedgerChannelSession struct {
	Contract     *LedgerChannel    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// LedgerChannelCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type LedgerChannelCallerSession struct {
	Contract *LedgerChannelCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// LedgerChannelTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type LedgerChannelTransactorSession struct {
	Contract     *LedgerChannelTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// LedgerChannelRaw is an auto generated low-level Go binding around an Ethereum contract.
type LedgerChannelRaw struct {
	Contract *LedgerChannel // Generic contract binding to access the raw methods on
}

// LedgerChannelCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type LedgerChannelCallerRaw struct {
	Contract *LedgerChannelCaller // Generic read-only contract binding to access the raw methods on
}

// LedgerChannelTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type LedgerChannelTransactorRaw struct {
	Contract *LedgerChannelTransactor // Generic write-only contract binding to access the raw methods on
}

// NewLedgerChannel creates a new instance of LedgerChannel, bound to a specific deployed contract.
func NewLedgerChannel(address common.Address, backend bind.ContractBackend) (*LedgerChannel, error) {
	contract, err := bindLedgerChannel(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &LedgerChannel{LedgerChannelCaller: LedgerChannelCaller{contract: contract}, LedgerChannelTransactor: LedgerChannelTransactor{contract: contract}, LedgerChannelFilterer: LedgerChannelFilterer{contract: contract}}, nil
}

// NewLedgerChannelCaller creates a new read-only instance of LedgerChannel, bound to a specific deployed contract.
func NewLedgerChannelCaller(address common.Address, caller bind.ContractCaller) (*LedgerChannelCaller, error) {
	contract, err := bindLedgerChannel(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &LedgerChannelCaller{contract: contract}, nil
}

// NewLedgerChannelTransactor creates a new write-only instance of LedgerChannel, bound to a specific deployed contract.
func NewLedgerChannelTransactor(address common.Address, transactor bind.ContractTransactor) (*LedgerChannelTransactor, error) {
	contract, err := bindLedgerChannel(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &LedgerChannelTransactor{contract: contract}, nil
}

// NewLedgerChannelFilterer creates a new log filterer instance of LedgerChannel, bound to a specific deployed contract.
func NewLedgerChannelFilterer(address common.Address, filterer bind.ContractFilterer) (*LedgerChannelFilterer, error) {
	contract, err := bindLedgerChannel(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &LedgerChannelFilterer{contract: contract}, nil
}

// bindLedgerChannel binds a generic wrapper to an already deployed contract.
func bindLedgerChannel(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(LedgerChannelABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LedgerChannel *LedgerChannelRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _LedgerChannel.Contract.LedgerChannelCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LedgerChannel *LedgerChannelRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LedgerChannel.Contract.LedgerChannelTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LedgerChannel *LedgerChannelRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LedgerChannel.Contract.LedgerChannelTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_LedgerChannel *LedgerChannelCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _LedgerChannel.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_LedgerChannel *LedgerChannelTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _LedgerChannel.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_LedgerChannel *LedgerChannelTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _LedgerChannel.Contract.contract.Transact(opts, method, params...)
}
